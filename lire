#!/usr/bin/env python3

import argparse
import ebooklib
from ebooklib import epub
from bs4 import BeautifulSoup
import curses
import os

def extract_text_by_chapter(book):
    chapters = []
    for item in book.get_items_of_type(ebooklib.ITEM_DOCUMENT):
        content = item.get_body_content()
        soup = BeautifulSoup(content, 'html.parser')
        chapter_text = soup.get_text()
        chapters.append(chapter_text)
    return chapters

def display_chapters(stdscr, chapters):
    curses.curs_set(0)
    current_chapter = 0
    start_line = 0
    height, _ = stdscr.getmaxyx()
    total_chapters = len(chapters)
    while current_chapter < total_chapters:
        stdscr.clear()
        chapter = chapters[current_chapter]
        display_chapter(stdscr, chapter, start_line, height, current_chapter, total_chapters)
        stdscr.refresh()
        visible_lines = height - 2
        key = stdscr.getch()
        if key == curses.KEY_DOWN:
            if start_line < len(wrap_text(chapter, curses.COLS)) - visible_lines:
                start_line += 1
        elif key == curses.KEY_UP:
            if start_line > 0:
                start_line -= 1
        elif key == curses.KEY_RIGHT or key == ord('d'):
            if current_chapter < total_chapters - 1:
                current_chapter += 1
                start_line = 0
        elif key == curses.KEY_LEFT or key == ord('a'):
            if current_chapter > 0:
                current_chapter -= 1
                start_line = 0
        elif key == ord('q'):
            break

def main():
    parser = argparse.ArgumentParser(description='EPUB TUI Reader.')
    parser.add_argument('input_path', type=str, help='Path to EPUB file')
    parser.add_argument('-o', '--output', type=str, help='Output directory for chapter text files')
    args = parser.parse_args()
    book = epub.read_epub(args.input_path)
    chapters = extract_text_by_chapter(book)

    def curses_main(stdscr):
        display_chapters(stdscr, chapters)
    curses.wrapper(curses_main)

if __name__ == "__main__":
    main()
